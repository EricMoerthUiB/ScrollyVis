import{getColormap,loadData,volume_render_init_withContainer}from"../web/js/volume-render.js";mapboxgl.accessToken="pk.eyJ1Ijoic3Bvb25lcnVpYiIsImEiOiJja2xjbGtyNWIxdXJvMnducGZhbWtyanhoIn0.edNKG90Wl-j4w7VSob5jkg";var id=document.getElementById("drawflow"),inputFiles=[],newFiles=[],renderers={},cameras={},meshes={},scenes={},files={},filesSegmentation={},arcballs={},volumes={},slices={};window.meshes=meshes;var editor=new Drawflow(id);window.editor=editor,editor.reroute=!0,null!==template&&(editor.drawflow=template),editor.addNodeImport=((e,t)=>{const o=document.createElement("div");o.classList.add("parent-node");const n=document.createElement("div");n.innerHTML="",n.setAttribute("id","node-"+e.id),n.classList.add("drawflow-node"),""!=e.class&&n.classList.add(e.class);const i=document.createElement("div");i.classList.add("inputs");const a=document.createElement("div");a.classList.add("outputs");const l=document.createElement("div");l.classList.add("inputsBottom");const s=document.createElement("div");s.classList.add("outputsTop"),Object.keys(e.inputs).map(function(o,n){const a=document.createElement("div");"in"===e.inputs[o].type?(a.classList.add("input"),i.appendChild(a)):(a.classList.add("inputBottom"),l.appendChild(a)),a.classList.add(o),Object.keys(e.inputs[o].connections).map(function(n,i){var a=document.createElementNS("http://www.w3.org/2000/svg","svg"),l=document.createElementNS("http://www.w3.org/2000/svg","path");l.classList.add("main-path"),"inBottom"===e.inputs[o].type&&l.classList.add("sub-path"),l.setAttributeNS(null,"d",""),a.classList.add("connection"),a.classList.add("node_in_node-"+e.id),a.classList.add("node_out_node-"+e.inputs[o].connections[n].node),a.classList.add(e.inputs[o].connections[n].input),a.classList.add(o),a.appendChild(l),t.appendChild(a)})});for(var r=0;r<Object.keys(e.outputs).length;r++){const t=document.createElement("div");"out"===e.outputs[Object.keys(e.outputs)[r]].type?(t.classList.add("output"),a.appendChild(t)):(t.classList.add("outputTop"),s.appendChild(t)),t.classList.add("output_"+(r+1))}const d=document.createElement("div"),c=document.createElement("div");if(c.classList.add("drawflow_content_node"),!1===e.typenode)c.innerHTML=e.html;else if(!0===e.typenode)c.appendChild(this.noderegister[e.html].html.cloneNode(!0));else if(3===parseInt(this.render.version)){this.render.createApp({parent:this.parent,render:t=>this.render.h(this.noderegister[e.html].html,this.noderegister[e.html].props,this.noderegister[e.html].options)}).mount(c)}else{let t=new this.render({parent:this.parent,render:t=>t(this.noderegister[e.html].html,{props:this.noderegister[e.html].props}),...this.noderegister[e.html].options}).$mount();c.appendChild(t.$el)}if(Object.entries(e.data).forEach(function(t,o){if("object"==typeof t[1])!function t(o,n,i){if(null===o)var o=e.data[n];else var o=o[n];null!==o&&Object.entries(o).forEach(function(e,n){if("object"==typeof e[1])t(o,e[0],i+"-"+e[0]);else for(var a=c.querySelectorAll("[df-"+i+"-"+e[0]+"]"),l=0;l<a.length;l++)a[l].value=e[1]})}(null,t[0],t[0]);else for(var n=c.querySelectorAll("[df-"+t[0]+"]"),i=0;i<n.length;i++)"checkbox"===n[i].type&&(n[i].checked="true"===t[1]),n[i].value=t[1]}),d.appendChild(s),d.appendChild(c),d.appendChild(l),n.appendChild(i),n.appendChild(d),n.appendChild(a),n.style.top=e.pos_y+"px",n.style.left=e.pos_x+"px",o.appendChild(n),editor.precanvas.appendChild(o),"map"===e.name){var p=$(document.getElementById("node-"+e.id))[0].children[1].children[1].children[0].children[0],m=new mapboxgl.Map({container:p,style:"mapbox://styles/mapbox/dark-v10",minZoom:3,maxZoom:18,scrollZoom:!1,doubleClickZoom:!1,dragPan:!1});void 0!==e.data.latlon&&""!==e.data.latlon&&((new mapboxgl.Marker).setLngLat(e.data.latlon).addTo(m),m.flyTo({center:e.data.latlon,zoom:8}));var u=new MapboxGeocoder({accessToken:mapboxgl.accessToken,mapboxgl:mapboxgl});u.on("result",function(t){var o=editor.getNodeFromId(e.id.toString()).data;o.latlon=t.result.center,editor.updateNodeDataFromId(e.id,o)}),$(document.getElementById("node-"+e.id))[0].children[1].children[1].children[1].children[1].appendChild(u.onAdd(m))}}),editor.start();for(var elements=document.getElementsByClassName("drag-drawflow"),i=0;i<elements.length;i++)elements[i].addEventListener("touchend",drop,!1),elements[i].addEventListener("touchmove",positionMobile,!1),elements[i].addEventListener("touchstart",drag,!1);var mobile_item_selec="",mobile_last_move=null;function positionMobile(e){mobile_last_move=e}export function allowDrop(e){e.preventDefault()}window.allowDrop=allowDrop;export function drag(e){"touchstart"===e.type?mobile_item_selec=e.target.closest(".drag-drawflow").getAttribute("data-node"):e.dataTransfer.setData("node",e.target.getAttribute("data-node"))}window.drag=drag;export function drop(e){"touchend"===e.type?(null!=document.elementFromPoint(mobile_last_move.touches[0].clientX,mobile_last_move.touches[0].clientY).closest("#drawflow")&&addNodeToDrawFlow(mobile_item_selec,mobile_last_move.touches[0].clientX,mobile_last_move.touches[0].clientY),mobile_item_selec=""):(e.preventDefault(),addNodeToDrawFlow(e.dataTransfer.getData("node"),e.clientX,e.clientY))}function getSize(e){return[e.xLength*e.spacing[0],e.yLength*e.spacing[1],e.zLength*e.spacing[2],e.xLength,e.yLength,e.zLength]}function loadSegmentation(e,t,o){var n=void 0!==t?t:$(e.currentTarget).parent("div").parent("div").parent("div").parent("div").get()[0].id,i=editor.getNodeFromId(n.split("-")[1]),a=void 0!==o?o:e.target.files[0],l=volumes[n],s=slices[n],r=renderers[n],d=scenes[n],c=cameras[n];filesSegmentation[n]=a,loadData(URL.createObjectURL(a),(e,t,o)=>{let n=getSize(o);e.scale.set(o.spacing[0],o.spacing[1],o.spacing[2]),e.position.set(-n[0]/2,-n[1]/2,-n[2]/2),e.material.uniforms.u_clim.value.set(.15,1),e.material.uniforms.u_renderstyle.value=2,e.material.uniforms.u_cmdata.value=getColormap("viridis"),l.add(e),t.rotation.z=Math.PI,t.position.x=i.data.slicePos[0],t.position.y=i.data.slicePos[1],t.material.uniforms.depth.value=i.data.sliceDepth,t.material.uniforms.u_color.value=new THREE.Vector3(1,0,0),s.add(t),"true"===i.data.slice&&(e.material.uniforms.u_opacity.value=0,t.material.uniforms.u_opacity.value=1),r.render(d,c)})}function loadVolume(e){loadVolumeIntern($(e.currentTarget).parent("div").parent("div").get()[0].childNodes[1].childNodes[1],$(e.currentTarget).parent("div").parent("div").parent("div").parent("div").get()[0].id,e.target.files[0])}function loadVolumeIntern(e,t,o,n){var i,a,l,s=editor.getNodeFromId(t.split("-")[1]);[i,a,l]=volume_render_init_withContainer(()=>{i.render(a,l)},e),renderers[t]=i,cameras[t]=l,scenes[t]=a,files[t]=o,arcballs[t]=new Arcball(i,l,a,e,"true"===s.data.slice),e.addEventListener("mousedown",e=>{arcballs[t].onDocumentMouseDown(e)},!1),e.addEventListener("mouseup",e=>{arcballs[t].onDocumentMouseUp(e),arcballToNodeData(t)},!1),e.addEventListener("mousemove",e=>{arcballs[t].onDocumentMouseMove(e)},!1),e.addEventListener("wheel",e=>{arcballs[t].onDocumentMouseWheel(e),arcballToNodeData(t)},!1),loadData(URL.createObjectURL(o),(e,o,i)=>{let r=new THREE.Group,d=getSize(i);if(e.scale.set(i.spacing[0],i.spacing[1],i.spacing[2]),e.position.set(-d[0]/2,-d[1]/2,-d[2]/2),e.material.uniforms.u_clim.value.set(s.data.clim1,s.data.clim2),e.material.uniforms.u_renderstyle.value=s.data.style,e.material.uniforms.u_renderthreshold.value=s.data.iso,e.material.uniforms.u_cmdata.value=getColormap(s.data.colormap),meshes[t]=e,r.add(e),volumes[t]=r,a.add(r),r.position.x=s.data.pos[0],r.position.y=s.data.pos[1],r.position.z=-5e3,r.rotation.x=s.data.rot[0],r.rotation.y=s.data.rot[1],r.rotation.z=s.data.rot[2],0!==s.data.zoom)l.zoom=s.data.zoom;else{l.zoom=1/i.spacing[0];let e=s.data;e.zoom=l.zoom,editor.updateNodeDataFromId(t.split("-")[1],e)}l.updateProjectionMatrix(),arcballs[t].object=r,arcballs[t].animate();let c=new THREE.Group;o.rotation.z=Math.PI,o.position.x=s.data.slicePos[0],o.position.y=s.data.slicePos[1],o.material.uniforms.depth.value=s.data.sliceDepth,c.add(o),slices[t]=c,a.add(c),"true"===s.data.slice&&(o.material.uniforms.u_opacity.value=1,e.material.uniforms.u_opacity.value=0),arcballs[t].sliceGroupValue=c,void 0!==n&&n()}),e.onload=function(){URL.revokeObjectURL(e.src)}}function arcballToNodeData(e){var t=editor.getNodeFromId(e.split("-")[1]).data;t.zoom=cameras[e].zoom,t.slicePos=[arcballs[e].sliceGroup.position.x,arcballs[e].sliceGroup.position.y],t.sliceDepth=arcballs[e].sliceGroup.children[0].material.uniforms.depth.value,t.pos=[arcballs[e].arcObject.position.x,arcballs[e].arcObject.position.y],t.rot=[cleanAngle(arcballs[e].arcObject.rotation.x),cleanAngle(arcballs[e].arcObject.rotation.y),cleanAngle(arcballs[e].arcObject.rotation.z)],editor.updateNodeDataFromId(e.split("-")[1],t)}function cleanAngle(e){return e>2*Math.PI?e-2*Math.PI:e<-2*Math.PI?e+2*Math.PI:e}window.drop=drop,window.loadSegmentation=loadSegmentation,window.loadVolume=loadVolume;export function changeVolume(e){var t=$(e.currentTarget).parent("div").parent("div").parent("div").parent("div").get()[0].id;"true"===$(e.currentTarget).parent("div").get()[0].childNodes[11].value?void 0!==slices[t]&&void 0!==meshes[t]&&(arcballs[t].sliceValue=!0,slices[t].children.forEach(e=>e.material.uniforms.u_opacity.value=1),volumes[t].children.forEach(e=>e.material.uniforms.u_opacity.value=0),renderers[t].render(scenes[t],cameras[t])):void 0!==meshes[t]&&(arcballs[t].sliceValue=!1,volumes[t].children.forEach(e=>e.material.uniforms.u_opacity.value=1),slices[t].children.forEach(e=>e.material.uniforms.u_opacity.value=0),meshes[t].material.uniforms.u_cmdata.value=getColormap($(e.currentTarget).parent("div").get()[0].childNodes[17].value),meshes[t].material.uniforms.u_renderstyle.value=$(e.currentTarget).parent("div").get()[0].childNodes[21].value,meshes[t].material.uniforms.u_renderthreshold.value=$(e.currentTarget).parent("div").get()[0].childNodes[25].value,meshes[t].material.uniforms.u_clim.value.set($(e.currentTarget).parent("div").get()[0].childNodes[29].value,$(e.currentTarget).parent("div").get()[0].childNodes[33].value),renderers[t].render(scenes[t],cameras[t]))}function loadImage(e){var t=$(e.currentTarget).parent("div").parent("div").children("img").get()[0];t.src=URL.createObjectURL(e.target.files[0]),t.onload=function(){URL.revokeObjectURL(t.src)}}function loadVideo(e){var t=$(e.currentTarget).parent("div").parent("div").children("video").get()[0];t.src=URL.createObjectURL(e.target.files[0]),t.onload=function(){URL.revokeObjectURL(t.src)}}window.changeVolume=changeVolume,window.loadImage=loadImage,window.loadVideo=loadVideo;export function addNodeToDrawFlow(e,t,o){addNodeToDrawFlowFixedPos(e,t=t*(editor.precanvas.clientWidth/(editor.precanvas.clientWidth*editor.zoom))-editor.precanvas.getBoundingClientRect().x*(editor.precanvas.clientWidth/(editor.precanvas.clientWidth*editor.zoom)),o=o*(editor.precanvas.clientHeight/(editor.precanvas.clientHeight*editor.zoom))-editor.precanvas.getBoundingClientRect().y*(editor.precanvas.clientHeight/(editor.precanvas.clientHeight*editor.zoom)))}window.addNodeToDrawFlow=addNodeToDrawFlow;export function copyNodeToDrawflowFixedPos(e,t,o){var n=editor.getNodeFromId(e);addNodeToDrawFlowFixedPos(n.name,t,o,n.data);var i=editor.nodeId-1,a=document.getElementById("node-"+i).childNodes[1].childNodes[1].childNodes[1].childNodes[1],l=files["node-"+n.id],s=filesSegmentation["node-"+n.id];void 0!==l&&loadVolumeIntern(a,"node-"+i,l,()=>{void 0!==s&&loadSegmentation(null,"node-"+i,s)})}window.copyNodeToDrawflowFixedPos=copyNodeToDrawflowFixedPos;export function addNodeToDrawFlowFixedPos(e,t,o,n){if("fixed"===editor.editor_mode)return!1;switch(e){case"start":editor.addNode("start",0,1,t,o,"start",void 0!==n?n:{title:"Title",subtitle:"subtitle"},'\n          <div style="width: 360px; height: 180px;">\n             <input type="text" df-title style="background-color: #222222; border: none; height: 30px; width: 250px;\n             margin-top: 50px; margin-left: 50px; color: white; font-size: 25px; text-align: center">\n              <input type="text" df-subtitle style="background-color: #222222; border: none; height: 30px; width: 150px;\n               margin-top: 20px; margin-left: 100px; color: white; text-align: center" >\n          </div>\n          ');break;case"text":editor.addNode("text",1,1,t,o,"text",void 0!==n?n:{text:"Text",size:"m",color:"#FFFFFF",bgcolor:"#00000000"},'\n         <div style="width: 380px;" xmlns="http://www.w3.org/1999/html">\n             <textarea df-text class="textAreaText"></textarea>\n          </div>\n          <div class="box">\n            <div style="float:left;margin-left: 36px; margin-top: 4px; margin-right: 45px">Color</div>\n            <input type="color" df-color style="width: 120px; border: none; display: block; background-color: #00000000"/>\n          <div style="margin-left: 36px; float:left; margin-top: 4px; margin-right: 55px">Size</div>\n            <select df-size style="height: 20px; margin-top: 2px; width: 120px; background-color: #222222; color: white;">\n                <option value="s" selected>Small</option>\n                <option value="m">Medium</option>\n                <option value="l">Large</option>\n                <option value="xl">X-Large</option>\n              </select>\n          </div>\n          ',!1,0,0);break;case"image":editor.addNode("image",1,1,t,o,"image",void 0!==n?n:{presentation:"normal",horizontal:"left"},'\n           <div class="container" style="">    \n                <div class="middle"><input type="file" accept="image/*" onchange="loadImage(event)" title=""></div>\n                <img class="image" id="output" style="z-index: 0; position: absolute;width: 380px; height: 180px;object-fit: scale-down; border: none;" draggable="false">\n          </div>\n          <div class="box" style="display: flex">\n            <div style="float:left;margin-left: 20px; margin-top: 4px; margin-right: 8px">Size:</div>\n             <select df-presentation style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white">\n                <option value="normal" selected>Normal</option>\n                <option value="fullscreen">Fullscreen</option>\n              </select>\n              <div style="margin-left: 25px; margin-right: 4px;"><i class="fas fa-ellipsis-h"></i>\n                <select df-horizontal style="height: 20px; margin-top: 2px; margin-left: 8px; width: 80px; background-color: #222222; color: white;">\n                    <option value="left" selected>Left</option>\n                    <option value="center" selected>Center</option>\n                    <option value="right" selected>Right</option>\n                  </select>\n              </div>\n          </div> \n          ',!1,1,1);break;case"video":editor.addNode("video",1,1,t,o,"video",void 0!==n?n:{presentation:"normal",horizontal:"left"},'\n           <div class="container" style="">    \n                <div class="middle"><input type="file" accept="video/*" onchange="loadVideo(event)" title=""></div>\n                <video class="image" id="output" style="z-index: 0; position: absolute;width: 380px; height: 180px;object-fit: scale-down; border: none;" draggable="false">\n          </div>\n           <div class="box" style="display: flex">\n            <div style="float:left;margin-left: 20px; margin-top: 4px; margin-right: 8px">Size:</div>\n             <select df-presentation style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white">\n                <option value="normal" selected>Normal</option>\n                <option value="fullscreen">Fullscreen</option>\n              </select>\n              <div style="margin-left: 25px; margin-right: 4px;"><i class="fas fa-ellipsis-h"></i>\n                <select df-horizontal style="height: 20px; margin-top: 2px; margin-left: 8px; width: 80px; background-color: #222222; color: white;">\n                    <option value="left" selected>Left</option>\n                    <option value="center" selected>Center</option>\n                    <option value="right" selected>Right</option>\n                  </select>\n              </div>\n          </div> \n          ',!1,1,1);break;case"subtext":editor.addNode("subtext",0,0,t,o,"subtext",void 0!==n?n:{text:"Text",size:"m",vertical:"center",horizontal:"right",color:"#FFFFFF",bgcolor:"#888888",background:"false"},'\n         <div style="width: 360px; margin-right: 20px; height: 65px;" xmlns="http://www.w3.org/1999/html">\n             <textarea df-text class="textAreaText" style="margin-left: 20px; width: 92%; height: 40px;"></textarea>\n          </div>\n          <div class="box" style="width: 340px;display: flex; flex-wrap:wrap;">\n            <div style="margin-left: 2px; margin-top: 4px;">Text: </div>\n            <input type="color" df-color style="width: 20px; border: none; background-color: #00000000;"/>\n            <div style="margin-left: 2px; margin-top: 4px;">BG Color: </div>\n            <input type="color" df-bgcolor style="width: 20px; border: none; background-color: #00000000; "/>\n            <div style="margin-left: 2px; margin-top: 4px;">BG: </div>\n             <input type="checkbox" df-background style="margin-left: 10px; margin-top: 5px;"/>\n          <div style="margin-left: 2px; margin-top: 4px; margin-right: 2px">Size: </div>\n            <select df-size style="height: 20px; margin-top: 2px;width: 40px; background-color: #222222; color: white;">\n                <option value="s">S</option>\n                <option value="m" selected>M</option>\n                <option value="l">L</option>\n                <option value="xl">XL</option>\n              </select>\n          <div style="margin-left: 5px; margin-right: 5px;"><i class="fas fa-ellipsis-v"></i>\n            <select df-vertical style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white;">\n                <option value="top" selected>Top</option>\n                <option value="center" selected>Center</option>\n                <option value="bottom" selected>Bottom</option>\n              </select>\n              </div>\n          <div style="margin-left: 5px; margin-right: 5px;"><i class="fas fa-ellipsis-h"></i>\n            <select df-horizontal style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white;">\n                <option value="left" selected>Left</option>\n                <option value="center" selected>Center</option>\n                <option value="right" selected>Right</option>\n              </select>\n          </div>\n          </div>\n          ',!1,0,1);break;case"map":var i='\n           <div class="container" style="">    \n                <div id="map" style="z-index: 0; position: absolute;width: 380px; height: 180px;" draggable="false"></div>\n          </div>\n          <div class="box">\n            <div style="margin-top: 5px">Location:</div>\n            <div id = "geocoder" style="float:left; margin-top: -15px; margin-left: 60px"></div>\n          </div> \n          ',a=editor.addNode("map",1,1,t,o,"map",void 0!==n?n:{latlon:"",presentation:"fullscreen"},i,!1,1,0),l=$(document.getElementById("node-"+a))[0].children[1].children[1].children[0].children[0],s=(i=new mapboxgl.Map({container:l,style:"mapbox://styles/mapbox/dark-v10",minZoom:3,maxZoom:18,scrollZoom:!1,doubleClickZoom:!1,dragPan:!1}),new MapboxGeocoder({accessToken:mapboxgl.accessToken,mapboxgl:mapboxgl}));s.on("result",function(e){var t=editor.getNodeFromId(a.toString()).data;t.latlon=e.result.center,editor.updateNodeDataFromId(a,t)}),$(document.getElementById("node-"+a))[0].children[1].children[1].children[1].children[1].appendChild(s.onAdd(i));break;case"decision":editor.addNode("decision",1,1,t,o,"decision",{option:"",question:""},'\n           <div style="width: 300px; height: 220px;">\n            <div style="margin-left: 10px; margin-top: 10px; width: 20px"><i class="fas fa-project-diagram fa-2x" style="color: #5b5b5b"></i></div>\n\x3c!--            <p>Enter Title</p>--\x3e\n            <div style="margin-left: 25px; margin-top: 15px;">Question:</div>\n             <input type="text" df-question style="background-color: #222222; border: none; height: 30px; width: 240px;\n             margin-top: 10px; margin-left: 25px; color: white; font-size: 25px; text-align: center">\n            <div style="margin-left: 25px; margin-top: 15px;">Choices separated by ;</div>\n             <input type="text" df-option style="background-color: #222222; border: none; height: 30px; width: 240px;\n             margin-top: 10px; margin-left: 25px; color: white; font-size: 25px; text-align: center">\n          </div>\n          ',!1,0,0);break;case"volvis":a=editor.addNode("volvis",1,1,t,o,"volvis",void 0!==n?n:{style:2,slice:"false",colormap:"gray",clim1:.15,clim2:.8,iso:.15,pos:[0,0,0],slicePos:[0,0,0],sliceDepth:0,rot:[0,0,0],zoom:0},'\n           <div class="" style="width: 380px; height: 200px">    \n                <div class="vol" style="width: 380px; height: 200px" draggable="false"></div>\n          </div>\n          <div class="box" style="width: 340px;display: flex; flex-wrap:wrap;">\n             <input type="button" value="Volume" onclick="$(event.currentTarget).parent(\'div\').get()[0].childNodes[3].click()" style="margin-left: 20px; height: 20px"/>\n             <input type="file" class="volumeFile" accept="*.nii.gz" onchange="loadVolume(event)" title="" style="margin-left: 20px;display:none">\n             <input type="button" value="Segmentation" onclick="{\n                if(meshes[$(event.currentTarget).parent(\'div\').parent(\'div\').parent(\'div\').parent(\'div\').get()[0].id] === undefined){\n                    alert(\'Load a volume first\');\n                 }else{\n                    $(event.currentTarget).parent(\'div\').get()[0].childNodes[7].click()\n                 }\n             }" style="margin-left: 12px; height: 20px"/>\n             <input type="file" class="segmentationFile" accept="*.nii.gz" onchange="loadSegmentation(event)" title="" style="margin-left: 20px;margin-bottom: 5px; display:none">\n             <div style="margin-left: 15px; ">Slice View</div>\n             <input type="checkbox" df-slice style="margin-left: 12px; margin-bottom: 10px" onchange="changeVolume(event)"/>\n\x3c!--             <input type="file" accept="*" onchange="loadVolume(event)" title="">--\x3e\n             <div style="margin-left: 20px; margin-top: 4px; margin-right: 8px">Colormap:</div>\n             <select df-colormap style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white" onchange="changeVolume(event)">\n                <option value="gray" selected>Gray</option>\n                <option value="viridis">Viridis</option>\n              </select>\n              <div style="margin-left: 32px; margin-top: 4px; margin-right: 8px">Style:</div>\n             <select df-style style="height: 20px; margin-top: 2px; width: 80px; background-color: #222222; color: white" onchange="changeVolume(event)">\n                <option value="2" selected>DVR</option>\n                <option value="1">ISO</option>\n                <option value="0">MIP</option>\n              </select>\n              <div style="margin-left: 20px; margin-top: 10px; margin-right: 2px">ISO: </div>\n              <input df-iso type="number" min ="0.1" max = "1" step="0.05"\n              style="height: 15px; margin-top: 8px; width: 45px; background-color: #222222; color: white"\n              onchange="changeVolume(event)" oninput="changeVolume(event)">\n              <div style="margin-left: 20px; margin-top: 10px; margin-right: 2px">CLIM1: </div>\n              <input df-clim1 type="number" min ="0.1" max = "1" step="0.05"\n              style="height: 15px; margin-top: 8px; width: 45px; background-color: #222222; color: white"\n              onchange="changeVolume(event)" oninput="changeVolume(event)">\n              <div style="margin-left: 20px; margin-top: 10px; margin-right: 2px">CLIM2: </div>\n              <input df-clim2 type="number" min ="0.1" max = "1" step="0.05"\n              style="height: 15px; margin-top: 8px; width: 45px; background-color: #222222; color: white"\n              onchange="changeVolume(event)" oninput="changeVolume(event)">\n          </div> \n          ',!1,1,1)}}window.addNodeToDrawFlowFixedPos=addNodeToDrawFlowFixedPos;export function changeMode(e){"lock"==e?(lock.style.display="none",unlock.style.display="block"):(lock.style.display="block",unlock.style.display="none")}window.changeMode=changeMode;export function copyToClipboard(){var e=document.createElement("input");e.value=JSON.stringify(editor.export(),null,4),document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e)}window.copyToClipboard=copyToClipboard;export function exportData(){document.getElementById("exportButton").classList.add("disabled");let e,t='<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n\x3c!--    <link href="https://fonts.googleapis.com/css?family=Roboto:100,400" rel="stylesheet">--\x3e\n    <link rel="stylesheet" type="text/css" href="css/base.css" />\n    <link rel="stylesheet" type="text/css" href="css/tree.css" />\n    <script type="text/javascript" src="./js/nifti-reader.js"><\/script>\n    <script src="https://unpkg.com/three@0.102.1/build/three.min.js"><\/script>\n    <script src="https://unpkg.com/three.phenomenon@1.1.0/dist/three.phenomenon.umd.js"><\/script>\n   <script src="https://unpkg.com/uos@1.1.1/dist/uos.umd.js"><\/script>\n   <script type="module" src="./js/volume-render.js"><\/script>\n   <script src=\'https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.js\'><\/script>\n    <script src=\'https://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\'><\/script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-csv/0.71/jquery.csv-0.71.min.js"><\/script>\n   <link href=\'https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.css\' rel=\'stylesheet\'/>\n   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" integrity="sha256-h20CPZ0QyXlBuAw7A+KluUYx/3pK+c7lYEpqLTlxjYQ=" crossorigin="anonymous" />\n   <script type="text/javascript" src="./js/videoCode.js"><\/script>\n',o='   </head>\n    <body>\n <main>\n<div class="content content--canvas">\n',n={},a=editor.export().drawflow.Home.data,l=Object.keys(a),s=[],r=[];for(i in l){let t=a[l[i]];if("start"===t.class){e=t;break}}if(null===e)throw"No Start Node given";var d=e,c=e,p=0;let m=[];for(m.push([e,e]);m.length>0;){[c,d]=m.pop();do{let e=void 0;if(d.outputs[Object.keys(d.outputs)[0]].connections.length>0){e=a[d.outputs[Object.keys(d.outputs)[0]].connections[0].node];for(let e=1;e<d.outputs[Object.keys(d.outputs)[0]].connections.length;e++)m.push([d,a[d.outputs[Object.keys(d.outputs)[0]].connections[e].node]])}else e={id:1e4,data:{},class:"stop",type:"stop"};let t=-1,i=Object.keys(d.inputs);for(let e in i)"inBottom"===d.inputs[i[e]].type&&d.inputs[i[e]].connections.length>0&&(t=d.inputs[i[e]].connections[0].node);t>=0?([n[d.id],o,r,s]=getNodeCode(d,c.id,a[t].id,e.id,o,r,s),[n,o,r,s]=handleSubtree(a[t],a,l.length,d.id,e.id,n,o,r,s),c=n[Object.keys(n)[Object.keys(n).length-1]]):([n[d.id],o,r,s]=getNodeCode(d,c.id,e.id,void 0,o,r,s),c=d),d=e,p++}while(void 0!==d&&"stop"!==d.class&&p<=l.length);[n[d.id],o,r,s]=getNodeCode(d,c.id,void 0,void 0,o,r,s)}r.length>0&&(t+="    <style>\n    body:after{\n     content: ",r.forEach(e=>t+='url("'+e+'") '),t+="\n    }\n    </style>"),t+=o,t+='        <div class="treeHolder">\n            <div class="tree">\n                 <ul>\n                    <li>\n                        <div class="circle active" id="c'+e.id+'"><i class="fas fa-play fa-xs treeIcon"></i></div>\n';let u=traverseFlowForTree(n[n[e.id].out],n,"",0);t+=u,t+="                 </li>\n            </ul>\n\n           </div></div>\n\n",t+='</div>\n</main>\n<script type="module" src="./js/index.js"><\/script>\n',Object.keys(n).some(e=>{if("map"===n[e].type)return!0})&&(t+='<script type="text/javascript" src="./js/mapCode.js"><\/script>\n'),exportWebpage(t+="\n</body>\n</html>",n,s,{},e.id)}function traverseFlowForTree(e,t,o,n=!1){if("decision"!==e.type&&"stop"===t[e.out].type)return getTreeNodeCode(n,e.id,e.type);if("object"==typeof e.out){let n="";return e.out.connections.forEach(e=>{n+="<li>"+traverseFlowForTree(t[e.node],t,o,!0)+"</li>"}),"<ul><li>"+getTreeNodeCode(!0,e.id,e.type)+"\n<ul>"+n+"</li></ul>\n"}return getTreeNodeCode(n,e.id,e.type)+traverseFlowForTree(t[e.out],t,o,!1)}function getTreeNodeCode(e,t,o){return e?'                             <div class="circle" id="c'+t+'"><i class="fas '+getIcon(o)+' fa-xs treeIcon"></i></div>\n':'                   <ul>\n                            <li>\n                                <div class="circle" id="c'+t+'"><i class="fas '+getIcon(o)+' fa-xs treeIcon"></i></div>\n                            </li>\n                        </ul>\n\n'}function getIcon(e){switch(e){case"text":return"fa-paragraph";case"image":return"fa-image";case"video":return"fa-video";case"subtext":return"fa-paragraph";case"map":return"fa-map-marked-alt";case"decision":return"fa-share-alt";case"volvis":return"fa-cube"}}function handleSubtree(e,t,o,n,i,a,l,s,r){let d=0,c=e,p=!1,m=n;do{p=!1;let e=void 0,n=Object.keys(c.outputs);for(let o in n)"out"===c.outputs[Object.keys(c.outputs)[o]].type&&c.outputs[Object.keys(c.outputs)[o]].connections.length>0&&(e=t[c.outputs[Object.keys(c.outputs)[0]].connections[0].node],p=!0);let u=-1,v=Object.keys(c.inputs);for(let e in v)"inBottom"===c.inputs[v[e]].type&&c.inputs[v[e]].connections.length>0&&(u=c.inputs[v[e]].connections[0].node);u>=0?([a[c.id],l,s,r]=getNodeCode(c,m,t[u].id,void 0!==e?e.id:i,l,s,r),[a,l,s]=handleSubtree(t[u],t,o,c.id,void 0!==e?e.id:i,a,l,s,r),m=a[Object.keys(a)[Object.keys(a).length-1]].id):[a[c.id],l,s,r]=getNodeCode(c,m,void 0!==e?e.id:i,void 0,l,s,r),c=e,d++}while(p&&d<=o);return[a,l,s,r]}function getNodeCode(e,t,o,n,i,a,l){let s=null;switch(e.class){case"start":i+='\t\t\t<div class="header" id="'+e.id+'">\n            <h1 class="header__title">'+e.data.title+'</h1>\n            <p class="header__text">'+e.data.subtitle+'</p>\n            <div id="progressContainer">\n              <div id="myProgress">\n              <div id="myBar"></div>\n             </div>\n              <div id="done" style="margin-left: 40%; opacity: 0">done</div>\n              </div>        </div>\n',s={id:e.id,in:"-1",out:o,type:"start"};break;case"text":i+='\t\t\t<div class="text '+e.data.size+'" id="'+e.id+'" style="color:'+e.data.color+"; background-color:"+e.data.bgcolor+'" >\n<span>\n'+e.data.text+"\n</span></div>\n",s={id:e.id,in:e.inputs.input_1.connections[0].node,out:o,type:"text",text:e.data.text};break;case"subtext":i+='\t\t\t<div class="subtext '+e.data.vertical+" "+e.data.horizontal+" "+e.data.size+'" id="'+e.id+'" style="color:'+e.data.color+"; background-color:"+e.data.bgcolor+("true"===e.data.background?"55":"00")+"\" >\n\t\t\t<span style='width: 100%'>\n\t\t\t\t"+e.data.text+"\n\t\t\t</span>\n\t\t\t</div>\n",s={id:e.id,in:t,out:o,type:"subtext",text:e.data.text};break;case"map":if(i+='<div class="'+("fullscreen"===e.data.presentation?"mapFullscreen":"map")+'" id="'+e.id+'">   <div id="map'+e.id+'"  style="width: 100%; height: 100%"></div></div>\n',""===e.data.latlon)throw"No location given in Map";s={id:e.id,in:t,out:o,blendOut:n,type:"map",lat:e.data.latlon[1],lon:e.data.latlon[0]};break;case"image":let d=document.getElementById("node-"+e.id).children[1].children[1].children[0].children[0].children[0].files[0];if(void 0===d)throw"no image file given";let c=e.id+"_"+d.name;inputFiles[e.id]=d,newFiles[e.id]=c,i+='<div class="'+("fullscreen"===e.data.presentation?"imageFullscreen":"image")+" "+e.data.horizontal+'" id="'+e.id+'">\n<img src="./data/'+c+'"/></div>\n',a.push("./data/"+c),s={id:e.id,in:t,out:o,blendOut:n,type:"image"};break;case"video":let p=document.getElementById("node-"+e.id).children[1].children[1].children[0].children[0].children[0].files[0];if(void 0===p)throw"no video file given";let m=e.id+"_"+p.name;inputFiles[e.id]=p,newFiles[e.id]=m,i+='<div class="'+("fullscreen"===e.data.presentation?"videoFullscreen":"video")+" "+e.data.horizontal+'" id="'+e.id+'">\n<video width="100%" id="vid'+e.id+'" muted controls onLoadedData = "videoLoaded('+e.id+')">\n     <source src="./data/'+m+'" type="video/mp4"/>\n</video>\n</div>\n',a.push("./data/"+m),s={id:e.id,in:t,out:o,blendOut:n,type:"video"};break;case"volvis":let u=void 0;if(void 0===files["node-"+e.id])throw"no volume given";u=files["node-"+e.id];let v=void 0;void 0!==files["node-"+e.id]&&(v=filesSegmentation["node-"+e.id]);let h=e.id+"_"+u.name;if(inputFiles[e.id]=u,newFiles[e.id]=h,void 0!==v){let t=e.id+"_"+v.name;inputFiles[e.id+"_seg"]=v,newFiles[e.id+"_seg"]=t}var r={id:e.id,in:t,out:o,blendOut:n,type:"volvis",presentation:e.data.style,volume:e.id,volumeFile:u,segmentationFile:v,method:e.data.style,colormap:e.data.colormap,clim1:e.data.clim1,clim2:e.data.clim2,iso:e.data.iso,pos:e.data.pos,rot:e.data.rot,slicePos:e.data.slicePos,slice:e.data.slice,sliceDepth:e.data.sliceDepth,zoom:e.data.zoom};l.push(r),s=r;break;case"stop":s={id:e.id,type:"stop"};break;case"decision":i+='\t\t\t<div class="headinger" id="'+e.id+'">\n<div>'+e.data.question+'</div>\n\t\t\t<div style="margin-top: 50px">',e.data.option.split(";").forEach(t=>{i+='\t\t\t\t\n<input type="radio" id="question'+e.id+":"+t+'" name="question'+e.id+'" value="'+t+'"',0===e.data.option.split(";").indexOf(t)?i+="checked":i+="",i+='>\n\t\t\t\t<label for="question'+e.id+":"+t+'">'+t+"</label>"}),i+="\n</div>\n</div>\n",s={id:e.id,flow:e.inputs.input_1.connections[0].node,out:e.outputs.output_1,question:e.data.question,options:e.data.option,type:"decision"}}return[s,i,a,l]}function generateDataLoaderNew(e,t){let o="import * as RENDER from \"./volume-render.js\";\nimport * as THREE from '../node_modules/three/build/three.module.js';",n=[],i=[],a=[],l="export function loadVolumeData(_scene, _camera) {\n",s=[];return e.forEach(e=>{s.includes(e.volume)?delete t[e.id]:(s.push(e.volume),n.push("vol"+e.volume),n.push("sl"+e.volume),i.push("size"+e.volume),i.push("sizeSeg"+e.volume),a.push("zoom"+e.volume),l+='    RENDER.loadData("data/'+t[e.volume]+'", (mesh, meshSlice, volume) => {\n        vol'+e.volume+" = new THREE.Group();\n        size"+e.volume+" = [volume.xLength*volume.spacing[0], volume.yLength*volume.spacing[1],volume.zLength*volume.spacing[2], volume.xLength, volume.yLength, volume.zLength];\n        mesh.scale.set(volume.spacing[0], volume.spacing[1], volume.spacing[2]);\n        mesh.position.set(- size"+e.volume+"[0]/2, - size"+e.volume+"[1]/2, - size"+e.volume+'[2]/2);\n        mesh.material.uniforms["u_clim"].value.set('+e.clim1+","+e.clim2+');\n        mesh.material.uniforms["u_renderstyle"].value = '+e.presentation+';\n        mesh.material.uniforms["u_renderthreshold"].value = '+e.iso+';\n        mesh.material.uniforms["u_cmdata"].value = RENDER.getColormap("'+("gray"===e.colormap?"gray":"viridis")+'");\n        vol'+e.volume+".add(mesh);\n        vol"+e.volume+".rotation.x = "+e.rot[0]+";\n        vol"+e.volume+".rotation.y = "+e.rot[1]+";\n        vol"+e.volume+".rotation.z = "+e.rot[2]+";\n        vol"+e.volume+".position.z = -5000;\n        vol"+e.volume+".position.x = "+e.pos[0]+";\n        vol"+e.volume+".position.y = "+e.pos[1]+";\n        zoom"+e.volume+"= "+e.zoom+";\n",l+="        _scene.add(vol"+e.volume+");\n        groups.push(vol"+e.volume+");\n",l+="\n        sl"+e.volume+" = new THREE.Group();\n        meshSlice.rotation.z = Math.PI;\n        meshSlice.position.x = "+e.slicePos[0]+";\n        meshSlice.position.y = "+e.slicePos[1]+';\n        meshSlice.material.uniforms["depth"].value = '+e.sliceDepth+";\n        sl"+e.volume+".add(meshSlice);\n        _scene.add(sl"+e.volume+");\n        groups.push(sl"+e.volume+");\n",null!=e.segmentationFile&&(l+='\n        RENDER.loadData("data/'+t[e.volume+"_seg"]+'", (mesh,meshSlice, volume) => {\n        sizeSeg'+e.volume+" = [volume.xLength*volume.spacing[0], volume.yLength*volume.spacing[1],volume.zLength*volume.spacing[2], volume.xLength, volume.yLength, volume.zLength];\n        mesh.scale.set(volume.spacing[0], volume.spacing[1], volume.spacing[2]);\n        mesh.position.set(- size"+e.volume+"[0]/2, - size"+e.volume+"[1]/2, - size"+e.volume+'[2]/2);\n        mesh.material.uniforms["u_clim"].value.set(0.15,1.0);\n        mesh.material.uniforms["u_renderstyle"].value = 2;\n        mesh.material.uniforms["u_cmdata"].value = RENDER.getColormap("viridis");\n        vol'+e.volume+".add(mesh);\n        meshSlice.rotation.z = Math.PI;\n        meshSlice.position.x = "+e.slicePos[0]+";\n        meshSlice.position.y = "+e.slicePos[1]+';\n        meshSlice.material.uniforms["depth"].value = '+e.sliceDepth+';\n        meshSlice.material.uniforms["u_color"].value = new THREE.Vector3(1,0,0);\n        sl'+e.volume+".add(meshSlice);\n",l+="        });\n\n"),l+="    });\n")}),l+="    }\n",n.length>0&&(o+="\n\nexport var "+n.join(",")+";\nexport var "+i.join(",")+";\nexport var "+a.join(",")+";\n"),o+="export var groups = [];\nexport var groupLength = "+n.length+";\n\n",[o+=l,t]}function createInstances(e,t,o){let n,i=[],a='import * as LoadData from "./loadData.js";\nimport * as RENDER from "./volume-render.js";\n\nvar _camera;\n\nexport function getInstances(camera){\n     _camera = camera;\n     let instances = [];\n     var id = -1;\n     let once = [];\n     let predecessor = {};\n     let listenerRemover = {};\n     let zoom = [];\n     let factor = 1;\n     let factors = [];\n     once[id] = false;\n     let start;\n',l=Object.keys(e)[0],s=0,r={},d=0,c=[];[d,r,c,n]=traverseNodes(l,r,e,{},[]),Object.keys(n).forEach(e=>{let t=n[e],o=[];t.forEach(e=>{o.push(Object.keys(r).indexOf(e.toString()))}),a+="     let pred"+e+" = ["+o.join(",")+"];\n"}),a+="     predecessor["+Object.keys(r).indexOf(e[o].out.toString())+"] = 1/"+r[o]+";\n";let p={};return a+="     start = "+Object.keys(r).indexOf(e[o].out.toString())+";\n",[p,s,a,i]=traverseFlow(l,0,{},a,p,e,t,r[o],r,n,i),[a+="\n        return [start, instances,once,"+r[o]+"];\n}\n\nfunction alterUniform(element, value, uniform) {\n    if (element != null) {\n        if (element.material !== undefined) {\n            element.material.uniforms[uniform].value = value;\n        } else {\n            element.children.forEach(child => child.material.uniforms[uniform].value = value);\n        }\n    }\n}\n\nfunction removeListenersAndOnces(list, listenerRemover, once) {\n    list.forEach(entry => {\n        if (Object.keys(listenerRemover).includes(entry.toString())) {\n            listenerRemover[entry]();\n            delete listenerRemover[entry];\n        }\n        once[entry] = false;\n    });\n    return [listenerRemover, once];\n}\n\nfunction rampTo(p, zoomo, zoom, _camera) {\n    let np = p < 0.5 ? 2 * p : 1;\n    _camera.zoom = zoomo + (zoom - zoomo) * np;\n    _camera.updateProjectionMatrix();\n}\n\n// Ramp function used for in and out transition\n//      ___\n//    /    \\\n// __/      \\__\nfunction ramp(p) {\n    return p <= 0.33 ? p * (1 / 0.33) : p > 0.33 && p < 0.66 ? 1 : 1 - ((p - 0.66) * (1 / 0.33));\n}\n\nfunction rampToPosRot(p, fromPos, toPos, fromRot, toRot, fromSlice, toSlice, object, slice) {\n    let np = p < 0.5 ? 2 * p : 1;\n    object.position.x = fromPos[0] + (toPos[0] - fromPos[0]) * np;\n    object.position.y = fromPos[1] + (toPos[1] - fromPos[1]) * np;\n    slice.position.x = fromSlice[0] + (toSlice[0] - fromSlice[0]) * np;\n    slice.position.y = fromSlice[1] + (toSlice[1] - fromSlice[1]) * np;\n    let angles = [Math.sqrt(Math.pow(toRot[0] - fromRot[0], 2)) * np,\n        Math.sqrt(Math.pow(toRot[1] - fromRot[1], 2)) * np];\n    let whereTo = [(toRot[0] < fromRot[0] ? fromRot[0] - (angles[0] * np) : fromRot[0] + (angles[0] * np)),\n        (toRot[1] < fromRot[1] ? fromRot[1] - (angles[1] * np) : fromRot[1] + (angles[1] * np))];\n    object.rotation.x = whereTo[0];\n    object.rotation.y = whereTo[1];\n}\n\n// From Settings [clim1, clim2, renderstyle, renderthreshold, u_cmdata]\nfunction rampSettings(p, fromSettings, toSettings, object, slice){\n    let np = p < 0.5 ? 2 * p : 1;\n    object.children[0].material.uniforms['u_clim'].value.set(fromSettings[0] + (toSettings[0] - fromSettings[0]) * np,\n        fromSettings[1] + (toSettings[1] - fromSettings[1]) * np);\n    object.children[0].material.uniforms['u_renderstyle'].value = toSettings[2];\n    object.children[0].material.uniforms['u_renderthreshold'].value = fromSettings[3] + (toSettings[3] - fromSettings[3]) * np;\n    slice.children.forEach(child => child.material.uniforms['depth'].value = fromSettings[5] + (toSettings[5] - fromSettings[5]) * np);\n    object.children[0].material.uniforms['u_cmdata'].value = RENDER.getColormap(toSettings[4]);\n}\n\n// RampOut function used for in and out transition\n// ___\n//    \\\n//     \\__\nfunction rampOut(p){\n    return p < 0.2 ? 1 - (5*p) : 0;\n}\n\n\n// RampIn function used for in and out transition\n//      ___\n//    /\n// __/\nfunction rampIn(p){\n    return p < 0.5 ? 2*p: 1;\n}",i]}function traverseNodes(e,t,o,n){let i,a,l=o[e];if(Object.keys(t).includes(l.id))return t;if("stop"===l.type)return t[l.id]=1,[1,t,[l.id],n];if("decision"===l.type){let e=[],s=[];l.out.connections.forEach(l=>{[i,t,a,n]=traverseNodes(l.node,t,o,n),e.push(i),a.forEach(e=>s.push(e))}),n[l.id]=[],s.forEach(e=>n[l.id].push(e)),n[l.id]=[...new Set(n[l.id])],s.push(l.id);let r=Math.max(...e);return t[l.id]=r+1,[r+1,t,s,n]}return[i,t,a]=traverseNodes(l.out,t,o,n),a.push(l.id),t[l.id]=i+1,[i+1,t,a,n]}function traverseFlow(e,t,o,n,i,a,l,s,r,d,c){let p=0;for(;p<Object.keys(a).length+1;){p++;let m=a[e];if("volvis"===m.type&&("volvis"===a[m.out].type||void 0!==m.blendOut&&"volvis"===a[m.blendOut].type)){let e="volvis"===a[m.out].type?a[m.out]:a[m.blendOut],t=m.volumeFile,n=m.segmentationFile,i=e.volumeFile,l=e.segmentationFile;t.size===i.size&&t.name===i.name&&t.type===i.type&&m.slice===e.slice&&(void 0===n&&void 0===l||void 0!==n&&void 0!==l&&n.size===l.size&&n.name==n.name&&n.type===l.type)&&(e.interpolateFrom=m,e.volume=m.volume),void 0===m.blendOut&&(m.blendOut=e.id,Object.keys(o).includes(e.id)?o[e.id].push(m):o[e.id]=[m])}else"volvis"===m.type&&void 0!==m.interpolateFrom&&void 0===m.blendOut&&(m.blendOut=m.out,Object.keys(o).includes(m.blendOut)?o[m.blendOut].push(m):o[m.blendOut]=[m]);if(Object.keys(i).includes(m.id.toString()))return[i,t,n,c];if(void 0!==m.blendOut&&(Object.keys(o).includes(m.blendOut.toString())?o[m.blendOut].push(m):o[m.blendOut]=[m]),["start"].includes(m.type)||(i[m.id]=t,n+=getInstance(m,t,"stop"!==m.type,m.out,o[m.id],l[m.id],void 0!==m.blendOut,s,r,void 0!==a[m.out]?a[m.out].type:"stop")),"map"===m.type&&c.push(m),t++,"stop"===a[e].type)return[i,t,n,c];"decision"===m.type?m.out.connections.forEach(e=>{[i,t,n,c]=traverseFlow(e.node,t,o,n,i,a,l,s,r,d,c)}):e=m.out}return[i,t,n,c]}function getInstance(e,t,o,n,i=[],a,l=!1,s,r,d){let c=Object.keys(r).indexOf(e.id.toString()),p=o?Object.keys(r).indexOf(n.toString()):-1;var m="\n    once["+c+"] = false;\n    instances["+c+"] = (p) => {\n        if (p <= 0) {\n";if("stop"!==e.type&&(m+='            document.getElementById("c'+e.id+'").classList.remove("active");\n'),["text","subtext","map","image","video","decision"].includes(e.type))m+='            document.getElementById("'+e.id+'").style.zIndex = "-1";\n';else if(["volvis"].includes(e.type)&&void 0===e.interpolateFrom){let t="sl";"false"===e.slice&&(t="vol"),m+="            alterUniform(LoadData."+t+e.volume+',0,"u_opacity");\n'}return m+="        } else {\n","stop"!==e.type&&(m+='            document.getElementById("c'+e.id+'").classList.add("active");\n'),["text","subtext","map","image","video","stop","decision"].includes(e.type)?("stop"!==e.type&&(m+='            document.getElementById("'+e.id+'").style.zIndex = "'+(s-r[e.id])+'";\n',m+=l?'            if(p < 1) document.getElementById("'+e.id+'").style.opacity = rampIn(p);\n':"stop"===e.type||"decision"!==e.type&&"stop"===d?'            document.getElementById("'+e.id+'").style.opacity = rampIn(p);\n':'            document.getElementById("'+e.id+'").style.opacity = ramp(p);\n'),"decision"===e.type&&(m+="            if (p < 1 && once["+c+"]) {\n                once["+c+"] = false;\n                factor = factors["+c+"];\n                [listenerRemover, once] = removeListenersAndOnces(pred"+e.id+", listenerRemover, once)\n            }\n"),void 0!==a&&(m+="            if(p<1){\n",a.forEach(e=>{m+="              "+e}),m+="            }\n")):["volvis"].includes(e.type)&&(m+="             if(p < 1) {",void 0!==e.interpolateFrom?(m+="\n              rampTo(p, "+e.interpolateFrom.zoom+","+e.zoom+",_camera);\n",m+="              rampToPosRot(p, ["+e.interpolateFrom.pos+"],["+e.pos+"],["+e.interpolateFrom.rot+"],["+e.rot+"],["+e.interpolateFrom.slicePos+"],["+e.slicePos+"],LoadData.vol"+e.interpolateFrom.volume+",LoadData.sl"+e.interpolateFrom.volume+");\n              rampSettings(p,["+e.interpolateFrom.clim1+","+e.interpolateFrom.clim2+","+e.interpolateFrom.method+","+e.interpolateFrom.iso+',"'+e.interpolateFrom.colormap+'", '+e.interpolateFrom.sliceDepth+"],["+e.clim1+","+e.clim2+","+e.method+","+e.iso+',"'+e.colormap+'",'+e.sliceDepth+"],LoadData.vol"+e.interpolateFrom.volume+",  LoadData.sl"+e.interpolateFrom.volume+");\n"):(m+="\n              rampTo(p, 0, "+e.zoom+", _camera);\n","false"===e.slice?m+=l||"stop"===d?"              alterUniform(LoadData.vol"+e.volume+',rampIn(p),"u_opacity");\n':"              alterUniform(LoadData.vol"+e.volume+',ramp(p), "u_opacity");\n':m+=l||"stop"===d?"              alterUniform(LoadData.sl"+e.volume+',rampIn(p),"u_opacity");\n':"              alterUniform(LoadData.sl"+e.volume+',ramp(p),"u_opacity");\n'),void 0!==a&&a.forEach(e=>{m+="              "+e}),m+="            }\n"),i.length>0&&"stop"!==e.type&&[...new Set(i)].forEach(t=>{["map","image","video"].includes(t.type)?m+='            document.getElementById("'+t.id+'").style.opacity = rampOut(p);\n':"volvis"===t.type&&void 0===e.interpolateFrom&&(m+="false"===t.slice?"            alterUniform(LoadData.vol"+t.volume+',rampOut(p),"u_opacity");\n':"            alterUniform(LoadData.sl"+t.volume+',rampOut(p),"u_opacity");\n')}),m+="        }\n        if (p === 1 && !once["+c+"]) {\n            factors["+c+"] = factor;\n",o&&("decision"===e.type?e.out.connections.forEach(t=>{p=Object.keys(r).indexOf(t.node),m+='            if (document.getElementsByName("question'+e.id+'")['+e.out.connections.indexOf(t)+"].checked) {\n                predecessor["+p+"] = predecessor["+c+"] + factor /"+s+";\n                listenerRemover["+p+"] = uos(predecessor["+c+"], predecessor["+c+"] + factor / "+s+", p => instances["+p+"](p));\n            }\n"}):m+="            predecessor["+p+"] = predecessor["+c+"] + factor /"+s+";\n            listenerRemover["+p+"] = uos(predecessor["+c+"] , predecessor["+c+"] + factor /"+s+", p => instances["+p+"](p));\n"),m+="            once["+c+"] = true;\n        }\n    };"}function generateMapCode(e){var t=generalMapCode(parseFloat(map.lat),parseFloat(map.lon));for(let o=0;o<e.length;o++){let n=e[o],i=[parseFloat(n.lat),parseFloat(n.lon)];for(let t=0;t<e.length;t++)e[t].out!==n.id&&e[t].blendOut!==n.id||(i=[e[t].lat,e[t].lon]);t+=getMapcode(parseFloat(n.lat),parseFloat(n.lon),"map"+n.id,i)}return t}function getMapcode(e,t,o,n){var i="var "+o+"= new mapboxgl.Map({\n       container: '"+o+"',\n       style: 'mapbox://styles/mapbox/dark-v10',\n       minZoom: 3,\n       maxZoom: 18,\n       interactive: false,\n       center: ["+n[1]+", "+n[0]+"],\n";return n[0]!==e&&(i+="       zoom: 10,\n"),i+="       scrollZoom: false\n});\n"+o+".on('load', function () {\n        (function mapLoop() {\n            let opacity = parseInt(document.getElementById(\""+o+'").parentElement.style.opacity);\n            if (isNaN(opacity) || opacity <= 0.95) {\n                setTimeout(mapLoop, 100);\n            } else {\n                new mapboxgl.Marker().setLngLat(['+n[1]+", "+n[0]+"]).addTo("+o+");\n                easeTo("+o+","+e+","+t+","+(n[0]!==e)+");\n            }\n        })();\n});"}function generalMapCode(){return"mapboxgl.accessToken = 'pk.eyJ1Ijoic3Bvb25lcnVpYiIsImEiOiJja2xjbGtyNWIxdXJvMnducGZhbWtyanhoIn0.edNKG90Wl-j4w7VSob5jkg';\n\nfunction easeTo(map, lat, lon, newLocation) {\n        new mapboxgl.Marker().setLngLat([lon,lat]).addTo(map);\n        if(newLocation){ \n                map.flyTo({duration: 10000, zoom: 10, center: [lon,lat]});\n        }else{\n                map.easeTo({duration: 10000, zoom: 10, center: [lon,lat]});\n        }\n}\n\n"}function exportWebpage(e,t,o,n,i){var a=new JSZip;a.file("index.html",e);var l,[s,r]=createInstances(t,n,i);[l,newFiles]=generateDataLoaderNew(o,newFiles);var d=a.folder("js");if(void 0!==r&&r.length>0){let e=generateMapCode(r);d.file("mapCode.js",e)}var c=a.folder("data");d.file("loadData.js",l),d.file("instances.js",s);var p=a.folder("css"),m=a.folder("jsm"),u=m.folder("libs"),v=m.folder("misc"),h=m.folder("shaders"),g=a.folder("textures"),f=a.folder("node_modules").folder("three").folder("build");let y=[loadFile("./web/js/index.js").then(e=>d.file("index.js",e)),loadFile("./web/js/nifti-reader.js").then(e=>d.file("nifti-reader.js",e)),loadFile("./web/js/videoCode.js").then(e=>d.file("videoCode.js",e)),loadFile("./web/js/volume-render.js").then(e=>d.file("volume-render.js",e)),$.get("./web/css/base.css").then(e=>p.file("base.css",e)),$.get("./web/css/main.css").then(e=>p.file("main.css",e)),$.get("./web/css/tree.css").then(e=>p.file("tree.css",e)),loadFile("./web/node_modules/three/build/three.module.js").then(e=>f.file("three.module.js",e)),loadFile("./web/jsm/libs/dat.gui.module.js").then(e=>u.file("dat.gui.module.js",e)),loadFile("./web/jsm/misc/Volume.d.ts").then(e=>v.file("Volume.d.ts",e)),loadFile("./web/jsm/misc/Volume.js").then(e=>v.file("Volume.js",e)),loadFile("./web/jsm/misc/VolumeSlice.d.ts").then(e=>v.file("VolumeSlice.d.ts",e)),loadFile("./web/jsm/misc/VolumeSlice.js").then(e=>v.file("VolumeSlice.js",e)),loadFile("./web/jsm/shaders/VolumeShader.d.ts").then(e=>h.file("VolumeShader.d.ts",e)),loadFile("./web/jsm/shaders/VolumeShader.js").then(e=>h.file("VolumeShader.js",e)),loadFile("./web/jsm/shaders/SliceShader.js").then(e=>h.file("SliceShader.js",e)),loadFile("./web/textures/cm_gray.png").then(e=>g.file("cm_gray.png",e)),loadFile("./web/textures/cm_viridis.png").then(e=>g.file("cm_viridis.png",e))];for(let e in newFiles)y.push(c.file(newFiles[e],inputFiles[e]));Promise.all(y).then(e=>{a.generateAsync({type:"blob"}).then(function(e){saveAs(e,"website.zip"),document.getElementById("exportButton").classList.remove("disabled")})}).catch(e=>{console.log(e)})}function loadFile(e){return new Promise(function(t,o){let n=new XMLHttpRequest;n.open("GET",e),n.crossOrigin=!0,n.responseType="arraybuffer",n.onreadystatechange=(()=>{4==n.readyState&&200===n.status&&t(n.response)}),n.send()})}window.exportData=exportData;